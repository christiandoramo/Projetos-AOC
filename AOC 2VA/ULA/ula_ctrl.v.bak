/*
Módulo de Controle:
Este módulo irá interpretar os códigos de operação (opcode) e sinais de controle para determinar qual operação
deve ser realizada e quais operandos devem ser usados.
*/

module ULA_Control(
    input wire [2:0] ALUOp,    // Sinal de controle da unidade de controle
    input wire [5:0] func,     // 6 bits menos significativos da instrução
    output wire [2:0] ALUControl // Saída do código de controle da ULA
);

    always @(*) begin
        case (ALUOp)
            3'b000: ALUControl = 3'b001; // Exemplo: Código para operação de adição
            3'b001: ALUControl = 3'b010; // Exemplo: Código para operação de subtração
            3'b010: ALUControl = 3'b100; // Exemplo: Código para operação lógica AND
            3'b011: ALUControl = 3'b101; // Exemplo: Código para operação lógica OR
            // ... Adicione mais casos conforme necessário
            default: ALUControl = 3'b000; // Código padrão para operação inválida
        endcase
    end

endmodule
